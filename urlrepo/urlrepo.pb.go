// Code generated by protoc-gen-go. DO NOT EDIT.
// source: urlrepo.proto

/*
Package urlrepo is a generated protocol buffer package.

It is generated from these files:
	urlrepo.proto

It has these top-level messages:
	UrlRequest
	UrlResponse
	UrlFilter
*/
package urlrepo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UrlRequest struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	AddedAt int32  `protobuf:"varint,4,opt,name=added_at,json=addedAt" json:"added_at,omitempty"`
}

func (m *UrlRequest) Reset()                    { *m = UrlRequest{} }
func (m *UrlRequest) String() string            { return proto.CompactTextString(m) }
func (*UrlRequest) ProtoMessage()               {}
func (*UrlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UrlRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UrlRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *UrlRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UrlRequest) GetAddedAt() int32 {
	if m != nil {
		return m.AddedAt
	}
	return 0
}

type UrlResponse struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *UrlResponse) Reset()                    { *m = UrlResponse{} }
func (m *UrlResponse) String() string            { return proto.CompactTextString(m) }
func (*UrlResponse) ProtoMessage()               {}
func (*UrlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UrlResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UrlResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type UrlFilter struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *UrlFilter) Reset()                    { *m = UrlFilter{} }
func (m *UrlFilter) String() string            { return proto.CompactTextString(m) }
func (*UrlFilter) ProtoMessage()               {}
func (*UrlFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UrlFilter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*UrlRequest)(nil), "urlrepo.UrlRequest")
	proto.RegisterType((*UrlResponse)(nil), "urlrepo.UrlResponse")
	proto.RegisterType((*UrlFilter)(nil), "urlrepo.UrlFilter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Url service

type UrlClient interface {
	GetUrls(ctx context.Context, in *UrlFilter, opts ...grpc.CallOption) (Url_GetUrlsClient, error)
	AddUrl(ctx context.Context, in *UrlRequest, opts ...grpc.CallOption) (*UrlResponse, error)
	RemoveUrl(ctx context.Context, in *UrlFilter, opts ...grpc.CallOption) (*UrlResponse, error)
	GetUrl(ctx context.Context, in *UrlFilter, opts ...grpc.CallOption) (*UrlRequest, error)
}

type urlClient struct {
	cc *grpc.ClientConn
}

func NewUrlClient(cc *grpc.ClientConn) UrlClient {
	return &urlClient{cc}
}

func (c *urlClient) GetUrls(ctx context.Context, in *UrlFilter, opts ...grpc.CallOption) (Url_GetUrlsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Url_serviceDesc.Streams[0], c.cc, "/urlrepo.Url/GetUrls", opts...)
	if err != nil {
		return nil, err
	}
	x := &urlGetUrlsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Url_GetUrlsClient interface {
	Recv() (*UrlRequest, error)
	grpc.ClientStream
}

type urlGetUrlsClient struct {
	grpc.ClientStream
}

func (x *urlGetUrlsClient) Recv() (*UrlRequest, error) {
	m := new(UrlRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *urlClient) AddUrl(ctx context.Context, in *UrlRequest, opts ...grpc.CallOption) (*UrlResponse, error) {
	out := new(UrlResponse)
	err := grpc.Invoke(ctx, "/urlrepo.Url/AddUrl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *urlClient) RemoveUrl(ctx context.Context, in *UrlFilter, opts ...grpc.CallOption) (*UrlResponse, error) {
	out := new(UrlResponse)
	err := grpc.Invoke(ctx, "/urlrepo.Url/RemoveUrl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *urlClient) GetUrl(ctx context.Context, in *UrlFilter, opts ...grpc.CallOption) (*UrlRequest, error) {
	out := new(UrlRequest)
	err := grpc.Invoke(ctx, "/urlrepo.Url/GetUrl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Url service

type UrlServer interface {
	GetUrls(*UrlFilter, Url_GetUrlsServer) error
	AddUrl(context.Context, *UrlRequest) (*UrlResponse, error)
	RemoveUrl(context.Context, *UrlFilter) (*UrlResponse, error)
	GetUrl(context.Context, *UrlFilter) (*UrlRequest, error)
}

func RegisterUrlServer(s *grpc.Server, srv UrlServer) {
	s.RegisterService(&_Url_serviceDesc, srv)
}

func _Url_GetUrls_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UrlFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UrlServer).GetUrls(m, &urlGetUrlsServer{stream})
}

type Url_GetUrlsServer interface {
	Send(*UrlRequest) error
	grpc.ServerStream
}

type urlGetUrlsServer struct {
	grpc.ServerStream
}

func (x *urlGetUrlsServer) Send(m *UrlRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _Url_AddUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrlServer).AddUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/urlrepo.Url/AddUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrlServer).AddUrl(ctx, req.(*UrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Url_RemoveUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UrlFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrlServer).RemoveUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/urlrepo.Url/RemoveUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrlServer).RemoveUrl(ctx, req.(*UrlFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Url_GetUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UrlFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrlServer).GetUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/urlrepo.Url/GetUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrlServer).GetUrl(ctx, req.(*UrlFilter))
	}
	return interceptor(ctx, in, info, handler)
}

var _Url_serviceDesc = grpc.ServiceDesc{
	ServiceName: "urlrepo.Url",
	HandlerType: (*UrlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUrl",
			Handler:    _Url_AddUrl_Handler,
		},
		{
			MethodName: "RemoveUrl",
			Handler:    _Url_RemoveUrl_Handler,
		},
		{
			MethodName: "GetUrl",
			Handler:    _Url_GetUrl_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUrls",
			Handler:       _Url_GetUrls_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "urlrepo.proto",
}

func init() { proto.RegisterFile("urlrepo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x14, 0xc4, 0xeb, 0x84, 0x26, 0xcd, 0x43, 0x20, 0xf4, 0xe8, 0x60, 0xca, 0x52, 0x79, 0xea, 0x54,
	0x21, 0x2a, 0xe8, 0xdc, 0x05, 0x76, 0x4b, 0x99, 0xab, 0x52, 0xbf, 0x21, 0x92, 0xc1, 0xe1, 0xd9,
	0xe6, 0x03, 0xf3, 0x49, 0x50, 0x9c, 0x16, 0xf1, 0x27, 0x0c, 0x6c, 0xbe, 0x93, 0xcf, 0xbf, 0x3b,
	0x19, 0xce, 0x22, 0x5b, 0xa6, 0xd6, 0x2d, 0x5b, 0x76, 0xc1, 0x61, 0x79, 0x90, 0x6a, 0x0b, 0x50,
	0xb3, 0xd5, 0xf4, 0x1a, 0xc9, 0x07, 0x3c, 0x87, 0xac, 0x31, 0x52, 0xcc, 0xc5, 0xa2, 0xd2, 0x59,
	0x63, 0xf0, 0x02, 0xf2, 0xc8, 0x56, 0x66, 0xc9, 0xe8, 0x8e, 0x38, 0x85, 0x71, 0x68, 0x82, 0x25,
	0x99, 0x27, 0xaf, 0x17, 0x78, 0x05, 0x93, 0x9d, 0x31, 0x64, 0xb6, 0xbb, 0x20, 0x4f, 0xe6, 0x62,
	0x31, 0xd6, 0x65, 0xd2, 0x9b, 0xa0, 0xd6, 0x70, 0x9a, 0x00, 0xbe, 0x75, 0x2f, 0x9e, 0x7e, 0x11,
	0x24, 0x94, 0x3e, 0xee, 0xf7, 0xe4, 0x7d, 0xa2, 0x4c, 0xf4, 0x51, 0xaa, 0x6b, 0xa8, 0x6a, 0xb6,
	0x0f, 0x8d, 0x0d, 0xc4, 0x3f, 0x63, 0xb7, 0xef, 0x02, 0xf2, 0x9a, 0x2d, 0xde, 0x43, 0xf9, 0x48,
	0xa1, 0x66, 0xeb, 0x11, 0x97, 0xc7, 0x89, 0x9f, 0xb1, 0xd9, 0xe5, 0x57, 0xef, 0x30, 0x52, 0x8d,
	0x6e, 0x04, 0xde, 0x41, 0xb1, 0x31, 0xa6, 0x7b, 0x61, 0xe8, 0xca, 0x6c, 0xfa, 0xdd, 0xec, 0xbb,
	0xab, 0x11, 0xae, 0xa1, 0xd2, 0xf4, 0xec, 0xde, 0xa8, 0x4b, 0x0e, 0x01, 0xff, 0x0a, 0xae, 0xa0,
	0xe8, 0x7b, 0xfe, 0xa3, 0xe6, 0x53, 0x91, 0xfe, 0x6a, 0xf5, 0x11, 0x00, 0x00, 0xff, 0xff, 0x60,
	0xe0, 0x6d, 0x20, 0xbc, 0x01, 0x00, 0x00,
}
